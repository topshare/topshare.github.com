heat_template_version: 2015-04-30

description: Animbus OpenStack deployment prepare template.

parameters:
  image:
    type: string
    description: OpenStack deploy image.
    default: animbus_base_os
    constraints:
    - custom_constraint: glance.image
      description: > 
        Name or ID of Image for Animbus 4.0GA deploy.

  flavor:
    type: string
    description: OpenStack deploy flavor.
    default: 2C_6G_60GB
    constraints:
    - custom_constraint: nova.flavor
      description: > 
        Name or ID of Image for Animbus 4.0GA deploy.

  os_pub_net:
    type: string
    description: OpenStack public network.
    default: dev-net-214
    constraints:
    - custom_constraint: neutron.network
      description: > 
        Name or ID of Image for Animbus 4.0GA deploy.

  os_int_net:
    type: string
    description: OpenStack internal network for vxlan.
    default: k-net
    constraints:
    - custom_constraint: neutron.network
      description: > 
        Name or ID of Image for Animbus 4.0GA deploy.

  os_volume_size:
    type: number
    description: OpenStack instance volume size.
    default: 60

  admin_user:
    type: string
    description: OpenStack instance root user.
    default: root
  
  admin_passwd:
    type: string
    description: OpenStack instance root user.
    default: openstack
  
  instance_name:
    type: string
    description: OpenStack instance name.
    default: os_node

  volume_name:
    type: string
    description: OpenStack instance volume name.
    default: os_volume

resources:

  volume:
    type: OS::Cinder::Volume
    properties:
      name: { get_param: volume_name }
      size: { get_param: os_volume_size }
  
  os_pub_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: os_pub_net }
      port_security_enabled: False

  os_int_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: os_int_net }
      port_security_enabled: False

  instance:
    type: OS::Nova::Server
    properties:
      name: { get_param: instance_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      admin_user: { get_param: admin_user }
      admin_pass: { get_param: admin_passwd }
      networks: [ {port: { get_resource: os_int_port } } , {port: { get_resource: os_pub_port } } ]

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    depends_on: [ instance, volume ]
    properties:
      volume_id: { get_resource: volume }
      instance_uuid: { get_resource: instance }
      mountpoint: /dev/vdb

